// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info": {
            "get": {
                "description": "Получение деталей о песне по имени группы и названию песни.",
                "tags": [
                    "Info"
                ],
                "summary": "Получить информацию о песне",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название группы",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название песни",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SongDetail"
                        }
                    },
                    "400": {
                        "description": "Параметры обязательны",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка получения данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/library": {
            "get": {
                "description": "Получение списка песен с фильтрацией по группе, названию и дате релиза.",
                "tags": [
                    "Songs"
                ],
                "summary": "Получить библиотеку песен",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Количество элементов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по группе",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по названию песни",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по дате релиза",
                        "name": "release_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Song"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения библиотеки",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song": {
            "post": {
                "description": "Добавление новой песни в библиотеку.",
                "tags": [
                    "Songs"
                ],
                "summary": "Добавить песню",
                "parameters": [
                    {
                        "description": "Данные для создания песни",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SongCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Песня добавлена"
                    },
                    "400": {
                        "description": "Ошибка декодирования данных песни",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка добавления песни",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/{id}": {
            "put": {
                "description": "Обновление информации о песне по ID.",
                "tags": [
                    "Songs"
                ],
                "summary": "Обновить данные песни",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные песни",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Песня обновлена"
                    },
                    "400": {
                        "description": "Ошибка декодирования данных или неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка обновления песни",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление песни из библиотеки по ID.",
                "tags": [
                    "Songs"
                ],
                "summary": "Удалить песню",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Песня удалена"
                    },
                    "400": {
                        "description": "Неверный ID песни",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка удаления песни",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/{id}/text": {
            "get": {
                "description": "Получение текста песни по ID с возможностью пагинации по куплетам.",
                "tags": [
                    "Songs"
                ],
                "summary": "Получить текст песни",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы (по куплетам)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверный ID песни",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Песня или куплеты не найдены",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "Название группы",
                    "type": "string"
                },
                "id": {
                    "description": "Уникальный идентификатор песни",
                    "type": "integer"
                },
                "link": {
                    "description": "Ссылка на дополнительную информацию",
                    "type": "string"
                },
                "release_date": {
                    "description": "Дата релиза песни",
                    "type": "string"
                },
                "song": {
                    "description": "Название песни",
                    "type": "string"
                },
                "text": {
                    "description": "Текст песни",
                    "type": "string"
                }
            }
        },
        "domain.SongCreateRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "Название группы (обязательно)",
                    "type": "string"
                },
                "song": {
                    "description": "Название песни (обязательно)",
                    "type": "string"
                }
            }
        },
        "domain.SongDetail": {
            "type": "object",
            "properties": {
                "link": {
                    "description": "Ссылка на дополнительную информацию о песне",
                    "type": "string"
                },
                "releaseDate": {
                    "description": "Дата релиза песни",
                    "type": "string"
                },
                "text": {
                    "description": "Текст песни",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Song Library API",
	Description:      "API для управления библиотекой песен",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
